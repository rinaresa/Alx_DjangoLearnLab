"""
Django settings for LibraryProject project.

Generated by 'django-admin startproject' using Django 5.2.4.
<<<<<<< HEAD
"""

from pathlib import Path
import os
=======

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
>>>>>>> a399cb4 (Add views and URLs for bookshelf app with permission decorators)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

<<<<<<< HEAD
# Quick-start development settings
SECRET_KEY = 'django-insecure-ngqgrh!t@jct)56h=#=6%nsilks_&qd-cn(qq-k_l^k(4v!5_)'
DEBUG = True
ALLOWED_HOSTS = []

# Application definition
=======

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-@f7qa4wpnhglw)5u*cr1)v_6&k#p2avy-0=b)!4t4^hfc-42fl'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

>>>>>>> a399cb4 (Add views and URLs for bookshelf app with permission decorators)
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
<<<<<<< HEAD
    
    # Your custom apps
    'advanced_features_and_security.apps.AdvancedFeaturesAndSecurityConfig',
    'bookshelf',
    'relationship_app',
=======

    'bookshelf',
>>>>>>> a399cb4 (Add views and URLs for bookshelf app with permission decorators)
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'LibraryProject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
<<<<<<< HEAD
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',
=======
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
>>>>>>> a399cb4 (Add views and URLs for bookshelf app with permission decorators)
            ],
        },
    },
]

WSGI_APPLICATION = 'LibraryProject.wsgi.application'

<<<<<<< HEAD
# Database
=======

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

>>>>>>> a399cb4 (Add views and URLs for bookshelf app with permission decorators)
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

<<<<<<< HEAD
# Custom User Model
AUTH_USER_MODEL = 'advanced_features_and_security.CustomUser'

# Password validation
=======

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

>>>>>>> a399cb4 (Add views and URLs for bookshelf app with permission decorators)
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

<<<<<<< HEAD
# Internationalization
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
STATIC_URL = 'static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

# Media files
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Login settings
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'
=======

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# âœ… Custom user model
AUTH_USER_MODEL = 'bookshelf.CustomUser'
>>>>>>> a399cb4 (Add views and URLs for bookshelf app with permission decorators)
